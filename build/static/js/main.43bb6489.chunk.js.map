{"version":3,"sources":["components/header/index.js","components/header/header.jsx","components/todo-item/todo-item.jsx","components/todo-list/index.js","components/todo-list/todo-list.jsx","components/search/index.js","components/search/search.jsx","components/status-filter/index.js","components/status-filter/status-filter.jsx","components/item-add-form/index.js","components/item-add-form/item-add-form.jsx","components/app/index.js","components/app/app.jsx","index.js"],"names":["Header","_ref","toDo","done","react_default","a","createElement","className","TodoItem","_this$props","this","props","text","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","type","Component","TodoList","data","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_item_TodoItem","assign","Search","state","term","onSearchChange","e","target","value","_this","setState","placeholder","onChange","StatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","trim","length","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","addItem","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_header","components_search","components_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","querySelector"],"mappings":"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","file":"static/js/main.43bb6489.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport './header.css';\r\n\r\nconst Header = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"header d-flex\">\r\n            <h1>Мой список дел</h1>\r\n            <h2>Выполнено: {done}, осталось: {toDo}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nimport './todo-item.css';\r\n\r\nexport default class TodoItem extends Component { \r\n\r\n    render() {\r\n        const { label: text, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n                <span className=\"todo-list-item-label\"\r\n                    onClick={onToggleDone}>{text}</span>\r\n\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from \"react\";\r\n\r\nimport TodoItem from '../todo-item/todo-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ data, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    const elements = data.map((item) => {\r\n\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <TodoItem {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)} \r\n                    onToggleDone={() => onToggleDone(id)} \r\n                />\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n        <ul className='list-group todo-list'>\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import Search from './search';\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nimport './search.css';\r\n\r\nexport default class Search extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = e => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"Поиск\"\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import StatusFilter from './status-filter';\r\n\r\nexport default StatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './status-filter.css';\r\n\r\nexport default class StatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'Все' },\r\n        { name: 'active', label: 'Активные' },\r\n        { name: 'done', label: 'Выполненные' }\r\n    ];\r\n\r\n    render() {\r\n        const { filter, onFilterChange } = this.props;\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return <button type='button' className={`btn ${clazz}`} key={name} onClick={() => onFilterChange(name)}>{label}</button>;\r\n        })\r\n\r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = e => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.label !== '' && this.state.label.trim().length > 0) {\r\n            this.props.onItemAdded(this.state.label);\r\n\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"Что нужно сделать?\"\r\n                    value={this.state.label}\r\n                />\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Добавить пункт\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport Header from '../header';\r\nimport TodoList from '../todo-list';\r\nimport Search from '../search';\r\nimport StatusFilter from '../status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Выучить javascript'),\r\n            this.createTodoItem('Выучить react'),\r\n            this.createTodoItem('Выучить node'),\r\n            this.createTodoItem('Слетать в космос'),\r\n            this.createTodoItem('Захватить весь мир!')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    }\r\n\r\n    deleteItem = id => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex(el => el.id === id);\r\n\r\n            const newDate = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newDate\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = text => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [...todoData, newItem];\r\n\r\n            return {\r\n                todoData: newArr\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex(el => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n    }\r\n\r\n    onToggleImportant = id => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleDone = id => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    onSearchChange = term => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    onFilterChange = filter => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    render() {\r\n        const { todoData, term, filter } = this.state;\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter(el => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <Header toDo={todoCount} done={doneCount} />\r\n\r\n                <div className=\"panel d-flex\">\r\n                    <Search onSearchChange={this.onSearchChange} />\r\n                    <StatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>\r\n\r\n                <TodoList\r\n                    data={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                />\r\n\r\n                <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app'\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}