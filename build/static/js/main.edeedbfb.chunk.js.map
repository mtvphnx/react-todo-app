{"version":3,"sources":["components/header/index.js","components/header/header.jsx","components/todo-item/todo-item.jsx","components/todo-list/index.js","components/todo-list/todo-list.jsx","components/search/index.js","components/search/search.jsx","components/status-filter/index.js","components/status-filter/status-filter.jsx","components/item-add-form/index.js","components/item-add-form/item-add-form.jsx","components/app/index.js","components/app/app.jsx","index.js"],"names":["Header","_ref","toDo","done","react_default","a","createElement","className","TodoItem","_this$props","this","props","text","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","type","Component","TodoList","data","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_item_TodoItem","assign","Search","state","term","onSearchChange","e","target","value","_this","setState","placeholder","onChange","StatusFilter","ItemAddForm","onLabelChange","onSubmit","preventDefault","trim","length","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","concat","toConsumableArray","slice","addItem","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","filter","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_header","components_search","components_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","querySelector"],"mappings":"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","file":"static/js/main.edeedbfb.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport './header.css';\r\n\r\nconst Header = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"header d-flex\">\r\n            <h1>Мой список дел</h1>\r\n            <h2>Выполнено: {done}, осталось: {toDo}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nimport './todo-item.css';\r\n\r\nexport default class TodoItem extends Component { \r\n\r\n    render() {\r\n        const { label: text, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n                <span className=\"todo-list-item-label\"\r\n                    onClick={onToggleDone}>{text}</span>\r\n\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from \"react\";\r\n\r\nimport TodoItem from '../todo-item/todo-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ data, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    const elements = data.map((item) => {\r\n\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <TodoItem {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)} \r\n                    onToggleDone={() => onToggleDone(id)} \r\n                />\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n        <ul className='list-group todo-list'>\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import Search from './search';\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nimport './search.css';\r\n\r\nexport default class Search extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = e => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"Поиск\"\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import StatusFilter from './status-filter';\r\n\r\nexport default StatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './status-filter.css';\r\n\r\nexport default class StatusFilter extends Component {\r\n    render() {\r\n        return (\r\n            <div className='btn-group'>\r\n                <button type='button' className='btn btn-info'>Все</button>\r\n                <button type='button' className='btn btn-outline-secondary'>Активные</button>\r\n                <button type='button' className='btn btn-outline-secondary'>Выполненные</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = e => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.label !== '' && this.state.label.trim().length > 0) {\r\n            this.props.onItemAdded(this.state.label);\r\n\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"Что нужно сделать?\"\r\n                    value={this.state.label}\r\n                />\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Добавить пункт\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport Header from '../header';\r\nimport TodoList from '../todo-list';\r\nimport Search from '../search';\r\nimport StatusFilter from '../status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Выучить javascript'),\r\n            this.createTodoItem('Выучить react'),\r\n            this.createTodoItem('Выучить node'),\r\n            this.createTodoItem('Слетать в космос'),\r\n            this.createTodoItem('Захватить весь мир!')\r\n        ],\r\n        term: ''\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    }\r\n\r\n    deleteItem = id => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex(el => el.id === id);\r\n\r\n            const newDate = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newDate\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = text => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [...todoData, newItem];\r\n\r\n            return {\r\n                todoData: newArr\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex(el => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n    }\r\n\r\n    onToggleImportant = id => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleDone = id => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    onSearchChange = term => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    render() {\r\n        const { todoData, term } = this.state;\r\n        const visibleItems = this.search(todoData, term);\r\n        const doneCount = todoData.filter(el => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <Header toDo={todoCount} done={doneCount} />\r\n\r\n                <div className=\"panel d-flex\">\r\n                    <Search onSearchChange={this.onSearchChange} />\r\n                    <StatusFilter />\r\n                </div>\r\n\r\n                <TodoList\r\n                    data={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                />\r\n\r\n                <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app'\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}