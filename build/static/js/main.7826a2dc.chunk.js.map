{"version":3,"sources":["components/header/index.js","components/header/header.jsx","components/todo-item/todo-item.jsx","components/todo-list/index.js","components/todo-list/todo-list.jsx","components/search/index.js","components/search/search.jsx","components/status-filter/index.js","components/status-filter/status-filter.jsx","components/item-add-form/index.js","components/item-add-form/item-add-form.jsx","components/app/index.js","components/app/app.jsx","index.js"],"names":["Header","_ref","toDo","done","react_default","a","createElement","className","TodoItem","_this$props","this","props","text","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","type","Component","TodoList","data","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_item_TodoItem","assign","Search","placeholder","StatusFilter","ItemAddForm","state","onLabelChange","e","_this","setState","target","value","onSubmit","preventDefault","onItemAdded","onChange","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","concat","toConsumableArray","slice","addItem","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","doneCount","filter","length","todoCount","components_header","components_search","components_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","querySelector"],"mappings":"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","file":"static/js/main.7826a2dc.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport './header.css';\r\n\r\nconst Header = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"header d-flex\">\r\n            <h1>Мой список дел</h1>\r\n            <h2>Выполнено: {done}, осталось: {toDo}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nimport './todo-item.css';\r\n\r\nexport default class TodoItem extends Component { \r\n\r\n    render() {\r\n        const { label: text, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n                <span className=\"todo-list-item-label\"\r\n                    onClick={onToggleDone}>{text}</span>\r\n\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from \"react\";\r\n\r\nimport TodoItem from '../todo-item/todo-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ data, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    const elements = data.map((item) => {\r\n\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <TodoItem {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)} \r\n                    onToggleDone={() => onToggleDone(id)} \r\n                />\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n        <ul className='list-group todo-list'>\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import Search from './search';\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\nimport './search.css';\r\n\r\nconst Search = () => {\r\n    return (\r\n        <input type='text' className='form-control search-input' placeholder='Поиск' />\r\n    )\r\n};\r\n\r\nexport default Search;","import StatusFilter from './status-filter';\r\n\r\nexport default StatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './status-filter.css';\r\n\r\nexport default class StatusFilter extends Component {\r\n    render() {\r\n        return (\r\n            <div className='btn-group'>\r\n                <button type='button' className='btn btn-info'>Все</button>\r\n                <button type='button' className='btn btn-outline-secondary'>Активные</button>\r\n                <button type='button' className='btn btn-outline-secondary'>Выполненные</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from \"react\";\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input type=\"text\" className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"Что нужно сделать?\"\r\n                    value={this.state.label}\r\n                />\r\n                <button className=\"btn btn-outline-secondary\">Добавить пункт</button>\r\n            </form>\r\n        )\r\n    }\r\n};\r\n","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport Header from '../header';\r\nimport TodoList from '../todo-list';\r\nimport Search from '../search';\r\nimport StatusFilter from '../status-filter';\r\nimport ItemAddForm from '../item-add-form'\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Выучить javascript'),\r\n            this.createTodoItem('Выучить react'),\r\n            this.createTodoItem('Выучить node'),\r\n            this.createTodoItem('Слетать в космос'),\r\n            this.createTodoItem('Захватить весь мир!')\r\n        ]\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newDate = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n                ];\r\n\r\n            return {\r\n                todoData: newDate\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        \r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ]\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { todoData } = this.state;\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className='app'>\r\n                <Header toDo={todoCount} done={doneCount} />\r\n\r\n                <div className='panel d-flex'>\r\n                    <Search/>\r\n                    <StatusFilter/>\r\n                </div>\r\n\r\n                <TodoList \r\n                    data={ this.state.todoData }\r\n                    onDeleted={ this.deleteItem } \r\n                    onToggleImportant={ this.onToggleImportant }\r\n                    onToggleDone={ this.onToggleDone }\r\n                />\r\n\r\n                <ItemAddForm onItemAdded = {this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app'\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}